plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.xeat'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springAiVersion', "1.0.0-M3")
}

dependencies {
	//DB 관련
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'redis.clients:jedis:5.0.2'
	implementation 'org.springframework.ai:spring-ai-redis-store-spring-boot-starter'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'
	implementation 'org.apache.httpcomponents.client5:httpclient5'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//web 관련
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-config-client'


	// open-ai 라이브러리 의존성 추가
	implementation 'org.springframework.ai:spring-ai-openai'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//JSON parsing
	implementation 'com.fasterxml.jackson.core:jackson-databind'


	implementation 'io.debezium:debezium-core:2.3.1.Final'
	// Debezium MySQL Connector
	implementation 'io.debezium:debezium-connector-mysql:2.3.0.Final'
	// Debezium Embedded Engine
	implementation 'io.debezium:debezium-embedded:2.3.0.Final'

	// 환경 변수
	implementation 'me.paulschwarz:spring-dotenv:3.0.0'



	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"

	}
}

tasks.named('test') {
	useJUnitPlatform()
}
